// <auto-generated />
using System;
using GetIpAndFollowUser.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GetIpAndFollowUser.Data.Migrations
{
    [DbContext(typeof(ConnectDatabaseContext))]
    [Migration("20200410120017_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GetIpAndFollowUser.Data.Entity.FollowWorkingPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Duration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("IdPageUser")
                        .HasColumnType("int");

                    b.Property<string>("LinkPage")
                        .HasColumnType("varchar(300)")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<int?>("ViewCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.HasIndex("IdPageUser");

                    b.ToTable("FollowWorkingPages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Duration = 0,
                            IdPageUser = 1,
                            LinkPage = "VietNam",
                            ViewCount = 0
                        });
                });

            modelBuilder.Entity("GetIpAndFollowUser.Data.Entity.LocationDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("IdLocationUser")
                        .HasColumnType("int");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("SmallAddress")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("IdLocationUser");

                    b.ToTable("LocationDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = "VietNam",
                            District = "HungHa",
                            IdLocationUser = 1,
                            Province = "ThaiBinh",
                            SmallAddress = "TanLe"
                        });
                });

            modelBuilder.Entity("GetIpAndFollowUser.Data.Entity.LocationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("DateEnd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((60))");

                    b.Property<string>("IpClient")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("Locations")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("LocationUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreate = new DateTime(2020, 4, 10, 19, 0, 16, 923, DateTimeKind.Local).AddTicks(6220),
                            DateEnd = 60,
                            IpClient = "100,100",
                            Locations = ""
                        });
                });

            modelBuilder.Entity("GetIpAndFollowUser.Data.Entity.FollowWorkingPage", b =>
                {
                    b.HasOne("GetIpAndFollowUser.Data.Entity.LocationUser", "IdPageUserNavigation")
                        .WithMany("FollowWorkingPage")
                        .HasForeignKey("IdPageUser")
                        .HasConstraintName("FK__FollowWor__IdPag__208CD6FA");
                });

            modelBuilder.Entity("GetIpAndFollowUser.Data.Entity.LocationDetail", b =>
                {
                    b.HasOne("GetIpAndFollowUser.Data.Entity.LocationUser", "IdLocationUserNavigation")
                        .WithMany("LocationDetail")
                        .HasForeignKey("IdLocationUser")
                        .HasConstraintName("FK__LocationD__IdLoc__1AD3FDA4");
                });
#pragma warning restore 612, 618
        }
    }
}
